package Arrays;

import java.util.Arrays;

public class InversionCount {

	public static void main(String[] args) {
		// https://www.geeksforgeeks.org/problems/inversion-of-array-1587115620/1
//		int[] arr = {228,298,470,567,237,294,554,225,833,429,158,331,226,236,523,906,526,752,798,223,419,147,156,528,282,843,732,513,855,580,269,746,922,615,474,565,133,239,147,582,605,332,895,971,619,718,549,604,356,426,750,291,626,835,422,352,368,708,891,365,669,361,555,819,416,392,547,398,345,458,542,318,340,682,650,571,771,401,406,955,491,189,361,171,891,162,581,781,825,747,578,536,947,746,841,125,501,563,711,356,377,112,676,842,629,207,947,578,698,997,982,315,412,183,756,631,781,462,402,143,432,429,856,953,699,614,242,437,501,816,155,197,958,939,661,656,416,773,679,972,589,557,670,852,184,103,637,717,114,852,926,658,305,928,520,913,531,499,320,131,578,640,264,813,267,678,567,848,640,517,266,566,924,208,915,853,222,829,915,468,981,118,464,113,254,329,398,179,119,532,392,109,165,841,648,360,991,695,288,199,652,406,305,511,740,932,852,615,654,129,210,412,904,679,655,292,373,517,567,458,894,828,616,285,210,614,878,472,230,821,601,699,930,125,779,951,964,375,851,543,539,680,395,918,445,983,260,614,861,436,792,959,731,705,284,352,641,714,176,915,715,231,163,731,603,593,649,389,853,267,553,953,828,906,296,470,778,266,628,217,777,556,802,838,517,367,740,298,317,663,386,285,490,865,505,479,380,227,249,125,854,748,969,637,269,777,858,588,921,702,110,656,295,867,909,111,598,178,844,446,595,285,213,618,676,658,240,820,721,256,871,643,375,720,530,215,843,390,903,635,186,384,511,225,625,510,438,257,841,322,578,203,837,184,540,724,255,985,517,155,578,626,648,547,120,754,480,800,1000,733,894,484,580,681,788,467,175,133,696,704,875,448,816,784,197,155,105,437,242,206,821,859,663,817,682,110,734,838,577,589,842,837,647,890,543,959,982,417,470,877,133,591,552,688,976,674,495,310,772,570,498,726,319,353,235,147,666,926,425,890,518,535,168,571,214,250,666,271,237,236,779,991,216,545,247,943,485,431,261,364,435,954,244,979,203,653,318,354,551,629,150,779,555,200,914,257,285,719,113,767,304,361,781,312,566,978,448,815,109,872,644,458,1000,146,510,517,267,655,663,738,408,472,821,559,699,226,925,600,274,670,887,470,699,773,341,192,789,859,507,769,892,842,221,496,529,757,266,205,222,358,200,758,297,174,396,945,565,722,217,391,683,455,943,677,482,757,870,659,139,766,954,702,335,774,204,228,659,124,911,580,883,120,210,739,220,515,587,382,194,650,778,768,633,688,813,159,952,109,872,712,539,695,114,408,785,344,302,410,325,389,561,725,771,831,591,300,364,370,536,456,264,431,430,212,238,674,361,135,503,632,743,517,421,879,437,526,890,667,519,455,100,787,303,859,819,689,880,930,892,190,332,806,834,996,553,240,718,117,367,164,375,146,503,239,498,836,647,779,940,220,771,375,515,869,257,363,284,822,791,237,367,965,677,759,606,731,807,734,534,139,317,762,189,103,901,730,805,493,758,282,357,839,712,440,368,677,635,268,251,556,820,219,956,409,670,724,385,224,709,115,699,562,927,258,921,663,240,615,430,699,494,136,261,184,546,555,170,889,484,892,873,140,879,191,590,422,669,710,358,843,920,462,472,747,459,479,164,545,791,172,167,986,260,143,966,685,929,680,626,223,979,409,493,119,316,118,331,419,811,259,783,879,259,426,297,986,854,696,838,799,542,719,233,948,453,631,577,648,933,549,494,970,109,878,603,420,374,801,871,743,887,700,544,221,512,976,524,854,714,992,156,588,801,309,935,968,106,368,254,380,180,449,569,641,548,322,284,484,392,455,534,157,489,943,148,127,932,934,817,281,662,728,206,336,381,891,928,512,980,752,560,262,914,756,487,615,204,262,826,189,762,375,721,805,659,662,356,328,302,796,505,431,671,409,396,722,943,293,142,615,561,131,892,720,890,447,280,859,217,614,754,489,622,463,176,893,505,912,516,432,528,689,416,883,458,414,296,382,239,144,325,684,472,579,383,522,653,543,718,616,357,579,542,474,318,126,105,472,801,968,100,487,944,138,637,880,676,910,477,408,100,542,238,646,765,661,532,220,812,610,892,171,460,322,463,420,622,154,964,642,220,816,172,612,135,507,713,477,230,508,819,755,301,241,875,305,439,370,127};
		int[] arr = {8,4,2,3,2,1,2,4,4,2,3,9};
		System.out.println(inversionCount(arr));
//		System.out.println(arr.length);
	}

	static int inversionCount(int arr[]) {
        // Your Code Here
        int count=0;
        int[] arr2 = new int[1000000];
        for(int k=0;k<arr.length;k++){
            if(arr2[arr[k]] != 0){
                arr2[arr[k]]++;
            }else{
                arr2[arr[k]]=1;
            }
        }
        for(int i=0;i<arr.length;i++){
        	arr2[arr[i]] -=1;
            for(int j=arr[i]-1; j>0;j--){
                count = count+arr2[j];
            }
        }
        return count;
    }
}
